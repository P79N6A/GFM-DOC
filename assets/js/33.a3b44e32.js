(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{347:function(e,n,t){"use strict";t.r(n);var r=t(46),o=Object(r.a)({},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"fenced-code-blocks"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fenced-code-blocks","aria-hidden":"true"}},[e._v("#")]),e._v(" Fenced code blocks")]),e._v(" "),t("p",[e._v("A "),t("a",{attrs:{href:"https://github.github.com/gfm/#code-fence",target:"_blank",rel:"noopener noreferrer"}},[e._v("code fence"),t("OutboundLink")],1),e._v(" is a sequence of at least three consecutive backtick characters ("),t("code",[e._v("`")]),e._v(") or tildes ("),t("code",[e._v("~")]),e._v("). (Tildes and backticks cannot be mixed.) A "),t("a",{attrs:{href:"https://github.github.com/gfm/#fenced-code-block",target:"_blank",rel:"noopener noreferrer"}},[e._v("fenced code block"),t("OutboundLink")],1),e._v(" begins with a code fence, indented no more than three spaces.")]),e._v(" "),t("p",[e._v("The line with the opening code fence may optionally contain some text following the code fence; this is trimmed of leading and trailing whitespace and called the "),t("a",{attrs:{href:"https://github.github.com/gfm/#info-string",target:"_blank",rel:"noopener noreferrer"}},[e._v("info string"),t("OutboundLink")],1),e._v(". The "),t("a",{attrs:{href:"https://github.github.com/gfm/#info-string",target:"_blank",rel:"noopener noreferrer"}},[e._v("info string"),t("OutboundLink")],1),e._v(" may not contain any backtick characters. (The reason for this restriction is that otherwise some inline code would be incorrectly interpreted as the beginning of a fenced code block.)")]),e._v(" "),t("p",[e._v("The content of the code block consists of all subsequent lines, until a closing "),t("a",{attrs:{href:"https://github.github.com/gfm/#code-fence",target:"_blank",rel:"noopener noreferrer"}},[e._v("code fence"),t("OutboundLink")],1),e._v(" of the same type as the code block began with (backticks or tildes), and with at least as many backticks or tildes as the opening code fence. If the leading code fence is indented N spaces, then up to N spaces of indentation are removed from each line of the content (if present). (If a content line is not indented, it is preserved unchanged. If it is indented less than N spaces, all of the indentation is removed.)")]),e._v(" "),t("p",[e._v("The closing code fence may be indented up to three spaces, and may be followed only by spaces, which are ignored. If the end of the containing block (or document) is reached and no closing code fence has been found, the code block contains all of the lines after the opening code fence until the end of the containing block (or document). (An alternative spec would require backtracking in the event that a closing code fence is not found. But this makes parsing much less efficient, and there seems to be no real down side to the behavior described here.)")]),e._v(" "),t("p",[e._v("A fenced code block may interrupt a paragraph, and does not require a blank line either before or after.")]),e._v(" "),t("p",[e._v("The content of a code fence is treated as literal text, not parsed as inlines. The first word of the "),t("a",{attrs:{href:"https://github.github.com/gfm/#info-string",target:"_blank",rel:"noopener noreferrer"}},[e._v("info string"),t("OutboundLink")],1),e._v(" is typically used to specify the language of the code sample, and rendered in the "),t("code",[e._v("class")]),e._v(" attribute of the "),t("code",[e._v("code")]),e._v("tag. However, this spec does not mandate any particular treatment of the "),t("a",{attrs:{href:"https://github.github.com/gfm/#info-string",target:"_blank",rel:"noopener noreferrer"}},[e._v("info string"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("p",[e._v("Here is a simple example with backticks:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-88",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 88"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("```\n<\n >\n```\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<pre><code>&lt;\n &gt;\n</code></pre>\n")])]),e._v(" "),t("p",[e._v("With tildes:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-89",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 89"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("~~~\n<\n >\n~~~\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<pre><code>&lt;\n &gt;\n</code></pre>\n")])]),e._v(" "),t("p",[e._v("Fewer than three backticks is not enough:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-90",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 90"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("``\nfoo\n``\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<p><code>foo</code></p>\n")])]),e._v(" "),t("p",[e._v("The closing code fence must use the same character as the opening fence:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-91",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 91"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("```\naaa\n~~~\n```\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<pre><code>aaa\n~~~\n</code></pre>\n")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.github.com/gfm/#example-92",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 92"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("~~~\naaa\n```\n~~~\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<pre><code>aaa\n```\n</code></pre>\n")])]),e._v(" "),t("p",[e._v("The closing code fence must be at least as long as the opening fence:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-93",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 93"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("````\naaa\n```\n``````\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<pre><code>aaa\n```\n</code></pre>\n")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.github.com/gfm/#example-94",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 94"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("~~~~\naaa\n~~~\n~~~~\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<pre><code>aaa\n~~~\n</code></pre>\n")])]),e._v(" "),t("p",[e._v("Unclosed code blocks are closed by the end of the document (or the enclosing "),t("a",{attrs:{href:"https://github.github.com/gfm/#block-quotes",target:"_blank",rel:"noopener noreferrer"}},[e._v("block quote"),t("OutboundLink")],1),e._v(" or "),t("a",{attrs:{href:"https://github.github.com/gfm/#list-items",target:"_blank",rel:"noopener noreferrer"}},[e._v("list item"),t("OutboundLink")],1),e._v("):"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-95",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 95"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("```\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<pre><code></code></pre>\n")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.github.com/gfm/#example-96",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 96"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("`````\n\n```\naaa\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<pre><code>\n```\naaa\n</code></pre>\n")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.github.com/gfm/#example-97",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 97"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("> ```\n> aaa\n\nbbb\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<blockquote>\n<pre><code>aaa\n</code></pre>\n</blockquote>\n<p>bbb</p>\n")])]),e._v(" "),t("p",[e._v("A code block can have all empty lines as its content:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-98",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 98"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("```\n\n  \n```\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<pre><code>\n  \n</code></pre>\n")])]),e._v(" "),t("p",[e._v("A code block can be empty:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-99",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 99"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("```\n```\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<pre><code></code></pre>\n")])]),e._v(" "),t("p",[e._v("Fences can be indented. If the opening fence is indented, content lines will have equivalent opening indentation removed, if present:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-100",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 100"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v(" ```\n aaa\naaa\n```\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<pre><code>aaa\naaa\n</code></pre>\n")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.github.com/gfm/#example-101",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 101"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("  ```\naaa\n  aaa\naaa\n  ```\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<pre><code>aaa\naaa\naaa\n</code></pre>\n")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.github.com/gfm/#example-102",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 102"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("   ```\n   aaa\n    aaa\n  aaa\n   ```\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<pre><code>aaa\n aaa\naaa\n</code></pre>\n")])]),e._v(" "),t("p",[e._v("Four spaces indentation produces an indented code block:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-103",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 103"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("    ```\n    aaa\n    ```\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<pre><code>```\naaa\n```\n</code></pre>\n")])]),e._v(" "),t("p",[e._v("Closing fences may be indented by 0-3 spaces, and their indentation need not match that of the opening fence:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-104",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 104"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("```\naaa\n  ```\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<pre><code>aaa\n</code></pre>\n")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.github.com/gfm/#example-105",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 105"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("   ```\naaa\n  ```\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<pre><code>aaa\n</code></pre>\n")])]),e._v(" "),t("p",[e._v("This is not a closing fence, because it is indented 4 spaces:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-106",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 106"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("```\naaa\n    ```\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<pre><code>aaa\n    ```\n</code></pre>\n")])]),e._v(" "),t("p",[e._v("Code fences (opening and closing) cannot contain internal spaces:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-107",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 107"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("``` ```\naaa\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<p><code></code>\naaa</p>\n")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.github.com/gfm/#example-108",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 108"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("~~~~~~\naaa\n~~~ ~~\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<pre><code>aaa\n~~~ ~~\n</code></pre>\n")])]),e._v(" "),t("p",[e._v("Fenced code blocks can interrupt paragraphs, and can be followed directly by paragraphs, without a blank line between:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-109",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 109"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("foo\n```\nbar\n```\nbaz\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<p>foo</p>\n<pre><code>bar\n</code></pre>\n<p>baz</p>\n")])]),e._v(" "),t("p",[e._v("Other blocks can also occur before and after fenced code blocks without an intervening blank line:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-110",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 110"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("foo\n---\n~~~\nbar\n~~~\n# baz\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<h2>foo</h2>\n<pre><code>bar\n</code></pre>\n<h1>baz</h1>\n")])]),e._v(" "),t("p",[e._v("An "),t("a",{attrs:{href:"https://github.github.com/gfm/#info-string",target:"_blank",rel:"noopener noreferrer"}},[e._v("info string"),t("OutboundLink")],1),e._v(" can be provided after the opening code fence. Opening and closing spaces will be stripped, and the first word, prefixed with "),t("code",[e._v("language-")]),e._v(", is used as the value for the "),t("code",[e._v("class")]),e._v(" attribute of the "),t("code",[e._v("code")]),e._v("element within the enclosing "),t("code",[e._v("pre")]),e._v(" element."),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-111",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 111"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("```ruby\ndef foo(x)\n  return 3\nend\n```\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v('<pre><code class="language-ruby">def foo(x)\n  return 3\nend\n</code></pre>\n')])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.github.com/gfm/#example-112",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 112"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("~~~~    ruby startline=3 $%@#$\ndef foo(x)\n  return 3\nend\n~~~~~~~\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v('<pre><code class="language-ruby">def foo(x)\n  return 3\nend\n</code></pre>\n')])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.github.com/gfm/#example-113",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 113"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("````;\n````\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v('<pre><code class="language-;"></code></pre>\n')])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.github.com/gfm/#info-string",target:"_blank",rel:"noopener noreferrer"}},[e._v("Info strings"),t("OutboundLink")],1),e._v(" for backtick code blocks cannot contain backticks:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-114",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 114"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("``` aa ```\nfoo\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<p><code>aa</code>\nfoo</p>\n")])]),e._v(" "),t("p",[e._v("Closing code fences cannot have "),t("a",{attrs:{href:"https://github.github.com/gfm/#info-string",target:"_blank",rel:"noopener noreferrer"}},[e._v("info strings"),t("OutboundLink")],1),e._v(":"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-115",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 115"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("```\n``` aaa\n```\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<pre><code>``` aaa\n</code></pre>\n")])])])},[],!1,null,null,null);n.default=o.exports}}]);