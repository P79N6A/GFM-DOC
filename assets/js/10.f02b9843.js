(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{369:function(e,o,t){"use strict";t.r(o);var n=t(46),r=Object(n.a)({},function(){var e=this,o=e.$createElement,t=e._self._c||o;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"block-quotes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#block-quotes","aria-hidden":"true"}},[e._v("#")]),e._v(" Block quotes")]),e._v(" "),t("p",[e._v("A "),t("a",{attrs:{href:"https://github.github.com/gfm/#block-quote-marker",target:"_blank",rel:"noopener noreferrer"}},[e._v("block quote marker"),t("OutboundLink")],1),e._v(" consists of 0-3 spaces of initial indent, plus (a) the character "),t("code",[e._v(">")]),e._v(" together with a following space, or (b) a single character "),t("code",[e._v(">")]),e._v(" not followed by a space."),t("br"),e._v("\nThe following rules define "),t("a",{attrs:{href:"https://github.github.com/gfm/#block-quotes",target:"_blank",rel:"noopener noreferrer"}},[e._v("block quotes"),t("OutboundLink")],1),e._v(":")]),e._v(" "),t("ol",[t("li",[t("strong",[e._v("Basic case.")]),e._v(" If a string of lines "),t("em",[e._v("Ls")]),e._v(" constitute a sequence of blocks "),t("em",[e._v("Bs")]),e._v(", then the result of prepending a "),t("a",{attrs:{href:"https://github.github.com/gfm/#block-quote-marker",target:"_blank",rel:"noopener noreferrer"}},[e._v("block quote marker"),t("OutboundLink")],1),e._v(" to the beginning of each line in "),t("em",[e._v("Ls")]),e._v(" is a "),t("a",{attrs:{href:"https://github.github.com/gfm/#block-quotes",target:"_blank",rel:"noopener noreferrer"}},[e._v("block quote"),t("OutboundLink")],1),e._v(" containing "),t("em",[e._v("Bs")]),e._v(".")]),e._v(" "),t("li",[t("strong",[e._v("Laziness.")]),e._v(" If a string of lines "),t("em",[e._v("Ls")]),e._v(" constitute a "),t("a",{attrs:{href:"https://github.github.com/gfm/#block-quotes",target:"_blank",rel:"noopener noreferrer"}},[e._v("block quote"),t("OutboundLink")],1),e._v(" with contents "),t("em",[e._v("Bs")]),e._v(", then the result of deleting the initial "),t("a",{attrs:{href:"https://github.github.com/gfm/#block-quote-marker",target:"_blank",rel:"noopener noreferrer"}},[e._v("block quote marker"),t("OutboundLink")],1),e._v(" from one or more lines in which the next "),t("a",{attrs:{href:"https://github.github.com/gfm/#non-whitespace-character",target:"_blank",rel:"noopener noreferrer"}},[e._v("non-whitespace character"),t("OutboundLink")],1),e._v(" after the "),t("a",{attrs:{href:"https://github.github.com/gfm/#block-quote-marker",target:"_blank",rel:"noopener noreferrer"}},[e._v("block quote marker"),t("OutboundLink")],1),e._v(" is "),t("a",{attrs:{href:"https://github.github.com/gfm/#paragraph-continuation-text",target:"_blank",rel:"noopener noreferrer"}},[e._v("paragraph continuation text"),t("OutboundLink")],1),e._v(" is a block quote with "),t("em",[e._v("Bs")]),e._v(" as its content. "),t("a",{attrs:{href:"https://github.github.com/gfm/#paragraph-continuation-text",target:"_blank",rel:"noopener noreferrer"}},[e._v("Paragraph continuation text"),t("OutboundLink")],1),e._v(" is text that will be parsed as part of the content of a paragraph, but does not occur at the beginning of the paragraph.")]),e._v(" "),t("li",[t("strong",[e._v("Consecutiveness.")]),e._v(" A document cannot contain two "),t("a",{attrs:{href:"https://github.github.com/gfm/#block-quotes",target:"_blank",rel:"noopener noreferrer"}},[e._v("block quotes"),t("OutboundLink")],1),e._v(" in a row unless there is a "),t("a",{attrs:{href:"https://github.github.com/gfm/#blank-line",target:"_blank",rel:"noopener noreferrer"}},[e._v("blank line"),t("OutboundLink")],1),e._v("between them.")])]),e._v(" "),t("p",[e._v("Nothing else counts as a "),t("a",{attrs:{href:"https://github.github.com/gfm/#block-quotes",target:"_blank",rel:"noopener noreferrer"}},[e._v("block quote"),t("OutboundLink")],1),e._v("."),t("br"),e._v("\nHere is a simple example:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-199",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 199"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("> # Foo\n> bar\n> baz\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<blockquote>\n<h1>Foo</h1>\n<p>bar\nbaz</p>\n</blockquote>\n")])]),e._v(" "),t("p",[e._v("The spaces after the "),t("code",[e._v(">")]),e._v(" characters can be omitted:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-200",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 200"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("># Foo\n>bar\n> baz\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<blockquote>\n<h1>Foo</h1>\n<p>bar\nbaz</p>\n</blockquote>\n")])]),e._v(" "),t("p",[e._v("The "),t("code",[e._v(">")]),e._v(" characters can be indented 1-3 spaces:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-201",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 201"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("   > # Foo\n   > bar\n > baz\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<blockquote>\n<h1>Foo</h1>\n<p>bar\nbaz</p>\n</blockquote>\n")])]),e._v(" "),t("p",[e._v("Four spaces gives us a code block:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-202",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 202"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("    > # Foo\n    > bar\n    > baz\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<pre><code>&gt; # Foo\n&gt; bar\n&gt; baz\n</code></pre>\n")])]),e._v(" "),t("p",[e._v("The Laziness clause allows us to omit the "),t("code",[e._v(">")]),e._v(" before "),t("a",{attrs:{href:"https://github.github.com/gfm/#paragraph-continuation-text",target:"_blank",rel:"noopener noreferrer"}},[e._v("paragraph continuation text"),t("OutboundLink")],1),e._v(":"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-203",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 203"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("> # Foo\n> bar\nbaz\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<blockquote>\n<h1>Foo</h1>\n<p>bar\nbaz</p>\n</blockquote>\n")])]),e._v(" "),t("p",[e._v("A block quote can contain some lazy and some non-lazy continuation lines:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-204",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 204"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("> bar\nbaz\n> foo\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<blockquote>\n<p>bar\nbaz\nfoo</p>\n</blockquote>\n")])]),e._v(" "),t("p",[e._v("Laziness only applies to lines that would have been continuations of paragraphs had they been prepended with "),t("a",{attrs:{href:"https://github.github.com/gfm/#block-quote-marker",target:"_blank",rel:"noopener noreferrer"}},[e._v("block quote markers"),t("OutboundLink")],1),e._v(". For example, the "),t("code",[e._v(">")]),e._v(" cannot be omitted in the second line of")]),e._v(" "),t("pre",[t("code",[e._v("> foo\n> ---\n")])]),e._v(" "),t("p",[e._v("without changing the meaning:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-205",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 205"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("> foo\n---\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<blockquote>\n<p>foo</p>\n</blockquote>\n<hr />\n")])]),e._v(" "),t("p",[e._v("Similarly, if we omit the "),t("code",[e._v(">")]),e._v(" in the second line of")]),e._v(" "),t("pre",[t("code",[e._v("> - foo\n> - bar\n")])]),e._v(" "),t("p",[e._v("then the block quote ends after the first line:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-206",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 206"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("> - foo\n- bar\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<blockquote>\n<ul>\n<li>foo</li>\n</ul>\n</blockquote>\n<ul>\n<li>bar</li>\n</ul>\n")])]),e._v(" "),t("p",[e._v("For the same reason, we can’t omit the "),t("code",[e._v(">")]),e._v(" in front of subsequent lines of an indented or fenced code block:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-207",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 207"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v(">     foo\n    bar\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<blockquote>\n<pre><code>foo\n</code></pre>\n</blockquote>\n<pre><code>bar\n</code></pre>\n")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.github.com/gfm/#example-208",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 208"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("> ```\nfoo\n```\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<blockquote>\n<pre><code></code></pre>\n</blockquote>\n<p>foo</p>\n<pre><code></code></pre>\n")])]),e._v(" "),t("p",[e._v("Note that in the following case, we have a "),t("a",{attrs:{href:"https://github.github.com/gfm/#lazy-continuation-line",target:"_blank",rel:"noopener noreferrer"}},[e._v("lazy continuation line"),t("OutboundLink")],1),e._v(":"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-209",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 209"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("> foo\n    - bar\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<blockquote>\n<p>foo\n- bar</p>\n</blockquote>\n")])]),e._v(" "),t("p",[e._v("To see why, note that in")]),e._v(" "),t("pre",[t("code",[e._v("> foo\n>     - bar\n")])]),e._v(" "),t("p",[e._v("the "),t("code",[e._v("- bar")]),e._v(" is indented too far to start a list, and can’t be an indented code block because indented code blocks cannot interrupt paragraphs, so it is "),t("a",{attrs:{href:"https://github.github.com/gfm/#paragraph-continuation-text",target:"_blank",rel:"noopener noreferrer"}},[e._v("paragraph continuation text"),t("OutboundLink")],1),e._v("."),t("br"),e._v("\nA block quote can be empty:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-210",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 210"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v(">\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<blockquote>\n</blockquote>\n")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.github.com/gfm/#example-211",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 211"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v(">\n>  \n>\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<blockquote>\n</blockquote>\n")])]),e._v(" "),t("p",[e._v("A block quote can have initial or final blank lines:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-212",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 212"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v(">\n> foo\n>\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<blockquote>\n<p>foo</p>\n</blockquote>\n")])]),e._v(" "),t("p",[e._v("A blank line always separates block quotes:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-213",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 213"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("> foo\n\n> bar\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<blockquote>\n<p>foo</p>\n</blockquote>\n<blockquote>\n<p>bar</p>\n</blockquote>\n")])]),e._v(" "),t("p",[e._v("(Most current Markdown implementations, including John Gruber’s original "),t("code",[e._v("Markdown.pl")]),e._v(", will parse this example as a single block quote with two paragraphs. But it seems better to allow the author to decide whether two block quotes or one are wanted.)"),t("br"),e._v("\nConsecutiveness means that if we put these block quotes together, we get a single block quote:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-214",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 214"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("> foo\n> bar\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<blockquote>\n<p>foo\nbar</p>\n</blockquote>\n")])]),e._v(" "),t("p",[e._v("To get a block quote with two paragraphs, use:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-215",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 215"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("> foo\n>\n> bar\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<blockquote>\n<p>foo</p>\n<p>bar</p>\n</blockquote>\n")])]),e._v(" "),t("p",[e._v("Block quotes can interrupt paragraphs:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-216",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 216"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("foo\n> bar\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<p>foo</p>\n<blockquote>\n<p>bar</p>\n</blockquote>\n")])]),e._v(" "),t("p",[e._v("In general, blank lines are not needed before or after block quotes:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-217",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 217"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("> aaa\n***\n> bbb\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<blockquote>\n<p>aaa</p>\n</blockquote>\n<hr />\n<blockquote>\n<p>bbb</p>\n</blockquote>\n")])]),e._v(" "),t("p",[e._v("However, because of laziness, a blank line is needed between a block quote and a following paragraph:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-218",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 218"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("> bar\nbaz\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<blockquote>\n<p>bar\nbaz</p>\n</blockquote>\n")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.github.com/gfm/#example-219",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 219"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("> bar\n\nbaz\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<blockquote>\n<p>bar</p>\n</blockquote>\n<p>baz</p>\n")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.github.com/gfm/#example-220",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 220"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("> bar\n>\nbaz\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<blockquote>\n<p>bar</p>\n</blockquote>\n<p>baz</p>\n")])]),e._v(" "),t("p",[e._v("It is a consequence of the Laziness rule that any number of initial "),t("code",[e._v(">")]),e._v("s may be omitted on a continuation line of a nested block quote:"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-221",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 221"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v("> > > foo\nbar\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<blockquote>\n<blockquote>\n<blockquote>\n<p>foo\nbar</p>\n</blockquote>\n</blockquote>\n</blockquote>\n")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.github.com/gfm/#example-222",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 222"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v(">>> foo\n> bar\n>>baz\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<blockquote>\n<blockquote>\n<blockquote>\n<p>foo\nbar\nbaz</p>\n</blockquote>\n</blockquote>\n</blockquote>\n")])]),e._v(" "),t("p",[e._v("When including an indented code block in a block quote, remember that the "),t("a",{attrs:{href:"https://github.github.com/gfm/#block-quote-marker",target:"_blank",rel:"noopener noreferrer"}},[e._v("block quote marker"),t("OutboundLink")],1),e._v(" includes both the "),t("code",[e._v(">")]),e._v(" and a following space. So "),t("em",[e._v("five spaces")]),e._v(" are needed after the "),t("code",[e._v(">")]),e._v(":"),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.github.com/gfm/#example-223",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 223"),t("OutboundLink")],1)]),e._v(" "),t("pre",[t("code",[e._v(">     code\n\n>    not code\n")])]),e._v(" "),t("p"),e._v(" "),t("pre",[t("code",[e._v("<blockquote>\n<pre><code>code\n</code></pre>\n</blockquote>\n<blockquote>\n<p>not code</p>\n</blockquote>\n")])])])},[],!1,null,null,null);o.default=r.exports}}]);