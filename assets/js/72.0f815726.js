(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{308:function(t,e,r){"use strict";r.r(e);var n=r(46),a=Object(n.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"容器块"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#容器块","aria-hidden":"true"}},[t._v("#")]),t._v(" 容器块")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://github.github.com/gfm/#container-block",target:"_blank",rel:"noopener noreferrer"}},[t._v("容器块"),r("OutboundLink")],1),t._v("是一种包含其他块的块的集合。容器块有两种基本类型，"),r("a",{attrs:{href:"https://github.github.com/gfm/#block-quotes",target:"_blank",rel:"noopener noreferrer"}},[t._v("块引用"),r("OutboundLink")],1),t._v("和"),r("a",{attrs:{href:"https://github.github.com/gfm/#list-items",target:"_blank",rel:"noopener noreferrer"}},[t._v("列表项"),r("OutboundLink")],1),t._v("。"),r("a",{attrs:{href:"https://github.github.com/gfm/#lists",target:"_blank",rel:"noopener noreferrer"}},[t._v("列表"),r("OutboundLink")],1),t._v("是"),r("a",{attrs:{href:"https://github.github.com/gfm/#list-items",target:"_blank",rel:"noopener noreferrer"}},[t._v("列表项"),r("OutboundLink")],1),t._v("的元容器。\n我们用递归的形式定义容器块的语法，其一般形式是：")]),t._v(" "),r("blockquote",[r("p",[t._v("如果 X 是一个块序列，那么通过一定的方式转换之后，会变成包含这些块的另一种形式 Y 。")])]),t._v(" "),r("p",[t._v("因此，我们通过 X 包含的内容 "),r("em",[t._v("生成")]),t._v(" 的结果来判断其是块引用还是列表项。这应该足以定义语法，尽管它没有给出 "),r("em",[t._v("解析")]),t._v(" 这些结构的方法。（有一个方法在章节 "),r("a",{attrs:{href:"https://github.github.com/gfm/#appendix-a-parsing-strategy",target:"_blank",rel:"noopener noreferrer"}},[t._v("A parsing strategy"),r("OutboundLink")],1),t._v(" 中提及。）")])])},[],!1,null,null,null);e.default=a.exports}}]);