(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{346:function(e,t,n){"use strict";n.r(t);var r=n(46),o=Object(r.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h3",{attrs:{id:"html-blocks"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#html-blocks","aria-hidden":"true"}},[e._v("#")]),e._v(" HTML blocks")]),e._v(" "),n("p",[e._v("An "),n("a",{attrs:{href:"https://github.github.com/gfm/#html-block",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTML block"),n("OutboundLink")],1),e._v(" is a group of lines that is treated as raw HTML (and will not be escaped in HTML output).")]),e._v(" "),n("p",[e._v("There are seven kinds of "),n("a",{attrs:{href:"https://github.github.com/gfm/#html-block",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTML block"),n("OutboundLink")],1),e._v(", which can be defined by their start and end conditions. The block begins with a line that meets a "),n("a",{attrs:{href:"https://github.github.com/gfm/#start-condition",target:"_blank",rel:"noopener noreferrer"}},[e._v("start condition"),n("OutboundLink")],1),e._v(" (after up to three spaces optional indentation). It ends with the first subsequent line that meets a matching "),n("a",{attrs:{href:"https://github.github.com/gfm/#end-condition",target:"_blank",rel:"noopener noreferrer"}},[e._v("end condition"),n("OutboundLink")],1),e._v(", or the last line of the document or other "),n("a",{attrs:{href:"https://github.github.com/gfm/#container-block",target:"_blank",rel:"noopener noreferrer"}},[e._v("container block"),n("OutboundLink")],1),e._v("), if no line is encountered that meets the "),n("a",{attrs:{href:"https://github.github.com/gfm/#end-condition",target:"_blank",rel:"noopener noreferrer"}},[e._v("end condition"),n("OutboundLink")],1),e._v(". If the first line meets both the "),n("a",{attrs:{href:"https://github.github.com/gfm/#start-condition",target:"_blank",rel:"noopener noreferrer"}},[e._v("start condition"),n("OutboundLink")],1),e._v(" and the "),n("a",{attrs:{href:"https://github.github.com/gfm/#end-condition",target:"_blank",rel:"noopener noreferrer"}},[e._v("end condition"),n("OutboundLink")],1),e._v(", the block will contain just that line.")]),e._v(" "),n("ol",[n("li",[n("p",[n("strong",[e._v("Start condition:")]),e._v(" line begins with the string "),n("code",[e._v("<script")]),e._v(", "),n("code",[e._v("<pre")]),e._v(", or "),n("code",[e._v("<style")]),e._v(" (case-insensitive), followed by whitespace, the string "),n("code",[e._v(">")]),e._v(", or the end of the line."),n("br"),e._v(" "),n("strong",[e._v("End condition:")]),e._v(" line contains an end tag "),n("code",[e._v("<\/script>")]),e._v(", "),n("code",[e._v("</pre>")]),e._v(", or "),n("code",[e._v("</style>")]),e._v(" (case-insensitive; it need not match the start tag).")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("Start condition:")]),e._v(" line begins with the string "),n("code",[e._v("\x3c!--")]),e._v("."),n("br"),e._v(" "),n("strong",[e._v("End condition:")]),e._v(" line contains the string "),n("code",[e._v("--\x3e")]),e._v(".")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("Start condition:")]),e._v(" line begins with the string "),n("code",[e._v("<?")]),e._v("."),n("br"),e._v(" "),n("strong",[e._v("End condition:")]),e._v(" line contains the string "),n("code",[e._v("?>")]),e._v(".")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("Start condition:")]),e._v(" line begins with the string "),n("code",[e._v("<!")]),e._v(" followed by an uppercase ASCII letter."),n("br"),e._v(" "),n("strong",[e._v("End condition:")]),e._v(" line contains the character "),n("code",[e._v(">")]),e._v(".")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("Start condition:")]),e._v(" line begins with the string "),n("code",[e._v("<![CDATA[")]),e._v("."),n("br"),e._v(" "),n("strong",[e._v("End condition:")]),e._v(" line contains the string "),n("code",[e._v("]]>")]),e._v(".")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("Start condition:")]),e._v(" line begins the string "),n("code",[e._v("<")]),e._v(" or "),n("code",[e._v("</")]),e._v(" followed by one of the strings (case-insensitive) "),n("code",[e._v("address")]),e._v(", "),n("code",[e._v("article")]),e._v(", "),n("code",[e._v("aside")]),e._v(", "),n("code",[e._v("base")]),e._v(", "),n("code",[e._v("basefont")]),e._v(", "),n("code",[e._v("blockquote")]),e._v(", "),n("code",[e._v("body")]),e._v(", "),n("code",[e._v("caption")]),e._v(", "),n("code",[e._v("center")]),e._v(", "),n("code",[e._v("col")]),e._v(", "),n("code",[e._v("colgroup")]),e._v(", "),n("code",[e._v("dd")]),e._v(", "),n("code",[e._v("details")]),e._v(", "),n("code",[e._v("dialog")]),e._v(", "),n("code",[e._v("dir")]),e._v(", "),n("code",[e._v("div")]),e._v(", "),n("code",[e._v("dl")]),e._v(", "),n("code",[e._v("dt")]),e._v(", "),n("code",[e._v("fieldset")]),e._v(", "),n("code",[e._v("figcaption")]),e._v(", "),n("code",[e._v("figure")]),e._v(", "),n("code",[e._v("footer")]),e._v(", "),n("code",[e._v("form")]),e._v(", "),n("code",[e._v("frame")]),e._v(", "),n("code",[e._v("frameset")]),e._v(", "),n("code",[e._v("h1")]),e._v(", "),n("code",[e._v("h2")]),e._v(", "),n("code",[e._v("h3")]),e._v(", "),n("code",[e._v("h4")]),e._v(", "),n("code",[e._v("h5")]),e._v(", "),n("code",[e._v("h6")]),e._v(", "),n("code",[e._v("head")]),e._v(", "),n("code",[e._v("header")]),e._v(", "),n("code",[e._v("hr")]),e._v(", "),n("code",[e._v("html")]),e._v(", "),n("code",[e._v("iframe")]),e._v(", "),n("code",[e._v("legend")]),e._v(", "),n("code",[e._v("li")]),e._v(", "),n("code",[e._v("link")]),e._v(", "),n("code",[e._v("main")]),e._v(", "),n("code",[e._v("menu")]),e._v(", "),n("code",[e._v("menuitem")]),e._v(", "),n("code",[e._v("nav")]),e._v(", "),n("code",[e._v("noframes")]),e._v(", "),n("code",[e._v("ol")]),e._v(", "),n("code",[e._v("optgroup")]),e._v(", "),n("code",[e._v("option")]),e._v(", "),n("code",[e._v("p")]),e._v(", "),n("code",[e._v("param")]),e._v(", "),n("code",[e._v("section")]),e._v(", "),n("code",[e._v("source")]),e._v(", "),n("code",[e._v("summary")]),e._v(", "),n("code",[e._v("table")]),e._v(", "),n("code",[e._v("tbody")]),e._v(", "),n("code",[e._v("td")]),e._v(", "),n("code",[e._v("tfoot")]),e._v(", "),n("code",[e._v("th")]),e._v(", "),n("code",[e._v("thead")]),e._v(", "),n("code",[e._v("title")]),e._v(", "),n("code",[e._v("tr")]),e._v(", "),n("code",[e._v("track")]),e._v(", "),n("code",[e._v("ul")]),e._v(", followed by "),n("a",{attrs:{href:"https://github.github.com/gfm/#whitespace",target:"_blank",rel:"noopener noreferrer"}},[e._v("whitespace"),n("OutboundLink")],1),e._v(", the end of the line, the string "),n("code",[e._v(">")]),e._v(", or the string "),n("code",[e._v("/>")]),e._v("."),n("br"),e._v(" "),n("strong",[e._v("End condition:")]),e._v(" line is followed by a "),n("a",{attrs:{href:"https://github.github.com/gfm/#blank-line",target:"_blank",rel:"noopener noreferrer"}},[e._v("blank line"),n("OutboundLink")],1),e._v(".")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("Start condition:")]),e._v(" line begins with a complete "),n("a",{attrs:{href:"https://github.github.com/gfm/#open-tag",target:"_blank",rel:"noopener noreferrer"}},[e._v("open tag"),n("OutboundLink")],1),e._v(" or "),n("a",{attrs:{href:"https://github.github.com/gfm/#closing-tag",target:"_blank",rel:"noopener noreferrer"}},[e._v("closing tag"),n("OutboundLink")],1),e._v(" (with any "),n("a",{attrs:{href:"https://github.github.com/gfm/#tag-name",target:"_blank",rel:"noopener noreferrer"}},[e._v("tag name"),n("OutboundLink")],1),e._v(" other than "),n("code",[e._v("script")]),e._v(", "),n("code",[e._v("style")]),e._v(", or "),n("code",[e._v("pre")]),e._v(") followed only by "),n("a",{attrs:{href:"https://github.github.com/gfm/#whitespace",target:"_blank",rel:"noopener noreferrer"}},[e._v("whitespace"),n("OutboundLink")],1),e._v(" or the end of the line."),n("br"),e._v(" "),n("strong",[e._v("End condition:")]),e._v(" line is followed by a "),n("a",{attrs:{href:"https://github.github.com/gfm/#blank-line",target:"_blank",rel:"noopener noreferrer"}},[e._v("blank line"),n("OutboundLink")],1),e._v(".")])])]),e._v(" "),n("p",[e._v("HTML blocks continue until they are closed by their appropriate "),n("a",{attrs:{href:"https://github.github.com/gfm/#end-condition",target:"_blank",rel:"noopener noreferrer"}},[e._v("end condition"),n("OutboundLink")],1),e._v(", or the last line of the document or other "),n("a",{attrs:{href:"https://github.github.com/gfm/#container-block",target:"_blank",rel:"noopener noreferrer"}},[e._v("container block"),n("OutboundLink")],1),e._v(". This means any HTML "),n("strong",[e._v("within an HTML block")]),e._v(" that might otherwise be recognised as a start condition will be ignored by the parser and passed through as-is, without changing the parser’s state."),n("br"),e._v("\nFor instance, "),n("code",[e._v("<pre>")]),e._v(" within a HTML block started by "),n("code",[e._v("<table>")]),e._v(" will not affect the parser state; as the HTML block was started in by start condition 6, it will end at any blank line. This can be surprising:"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-116",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 116"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("<table><tr><td>\n<pre>\n**Hello**,\n\n_world_.\n</pre>\n</td></tr></table>\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("<table><tr><td>\n<pre>\n**Hello**,\n<p><em>world</em>.\n</pre></p>\n</td></tr></table>\n")])]),e._v(" "),n("p",[e._v("In this case, the HTML block is terminated by the newline — the "),n("code",[e._v("**Hello**")]),e._v(" text remains verbatim — and regular parsing resumes, with a paragraph, emphasised "),n("code",[e._v("world")]),e._v(" and inline and block HTML following."),n("br"),e._v("\nAll types of "),n("a",{attrs:{href:"https://github.github.com/gfm/#html-blocks",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTML blocks"),n("OutboundLink")],1),e._v(" except type 7 may interrupt a paragraph. Blocks of type 7 may not interrupt a paragraph. (This restriction is intended to prevent unwanted interpretation of long tags inside a wrapped paragraph as starting HTML blocks.)"),n("br"),e._v("\nSome simple examples follow. Here are some basic HTML blocks of type 6:"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-117",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 117"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("<table>\n  <tr>\n    <td>\n           hi\n    </td>\n  </tr>\n</table>\n\nokay.\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("<table>\n  <tr>\n    <td>\n           hi\n    </td>\n  </tr>\n</table>\n<p>okay.</p>\n")])]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.github.com/gfm/#example-118",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 118"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v(" <div>\n  *hello*\n         <foo><a>\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v(" <div>\n  *hello*\n         <foo><a>\n")])]),e._v(" "),n("p",[e._v("A block can also start with a closing tag:"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-119",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 119"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("</div>\n*foo*\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("</div>\n*foo*\n")])]),e._v(" "),n("p",[e._v("Here we have two HTML blocks with a Markdown paragraph between them:"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-120",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 120"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v('<DIV CLASS="foo">\n\n*Markdown*\n\n</DIV>\n')])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v('<DIV CLASS="foo">\n<p><em>Markdown</em></p>\n</DIV>\n')])]),e._v(" "),n("p",[e._v("The tag on the first line can be partial, as long as it is split where there would be whitespace:"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-121",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 121"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v('<div id="foo"\n  class="bar">\n</div>\n')])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v('<div id="foo"\n  class="bar">\n</div>\n')])]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.github.com/gfm/#example-122",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 122"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v('<div id="foo" class="bar\n  baz">\n</div>\n')])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v('<div id="foo" class="bar\n  baz">\n</div>\n')])]),e._v(" "),n("p",[e._v("An open tag need not be closed:"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-123",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 123"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("<div>\n*foo*\n\n*bar*\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("<div>\n*foo*\n<p><em>bar</em></p>\n")])]),e._v(" "),n("p",[e._v("A partial tag need not even be completed (garbage in, garbage out):"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-124",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 124"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v('<div id="foo"\n*hi*\n')])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v('<div id="foo"\n*hi*\n')])]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.github.com/gfm/#example-125",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 125"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("<div class\nfoo\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("<div class\nfoo\n")])]),e._v(" "),n("p",[e._v("The initial tag doesn’t even need to be a valid tag, as long as it starts like one:"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-126",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 126"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("<div *???-&&&-<---\n*foo*\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("<div *???-&&&-<---\n*foo*\n")])]),e._v(" "),n("p",[e._v("In type 6 blocks, the initial tag need not be on a line by itself:"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-127",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 127"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v('<div><a href="bar">*foo*</a></div>\n')])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v('<div><a href="bar">*foo*</a></div>\n')])]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.github.com/gfm/#example-128",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 128"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("<table><tr><td>\nfoo\n</td></tr></table>\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("<table><tr><td>\nfoo\n</td></tr></table>\n")])]),e._v(" "),n("p",[e._v("Everything until the next blank line or end of document gets included in the HTML block. So, in the following example, what looks like a Markdown code block is actually part of the HTML block, which continues until a blank line or the end of the document is reached:"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-129",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 129"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("<div></div>\n``` c\nint x = 33;\n```\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("<div></div>\n``` c\nint x = 33;\n```\n")])]),e._v(" "),n("p",[e._v("To start an "),n("a",{attrs:{href:"https://github.github.com/gfm/#html-block",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTML block"),n("OutboundLink")],1),e._v(" with a tag that is "),n("em",[e._v("not")]),e._v(" in the list of block-level tags in (6), you must put the tag by itself on the first line (and it must be complete):"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-130",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 130"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v('<a href="foo">\n*bar*\n</a>\n')])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v('<a href="foo">\n*bar*\n</a>\n')])]),e._v(" "),n("p",[e._v("In type 7 blocks, the "),n("a",{attrs:{href:"https://github.github.com/gfm/#tag-name",target:"_blank",rel:"noopener noreferrer"}},[e._v("tag name"),n("OutboundLink")],1),e._v(" can be anything:"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-131",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 131"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("<Warning>\n*bar*\n</Warning>\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("<Warning>\n*bar*\n</Warning>\n")])]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.github.com/gfm/#example-132",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 132"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v('<i class="foo">\n*bar*\n</i>\n')])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v('<i class="foo">\n*bar*\n</i>\n')])]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.github.com/gfm/#example-133",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 133"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("</ins>\n*bar*\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("</ins>\n*bar*\n")])]),e._v(" "),n("p",[e._v("These rules are designed to allow us to work with tags that can function as either block-level or inline-level tags. The "),n("code",[e._v("<del>")]),e._v(" tag is a nice example. We can surround content with "),n("code",[e._v("<del>")]),e._v(" tags in three different ways. In this case, we get a raw HTML block, because the "),n("code",[e._v("<del>")]),e._v(" tag is on a line by itself:"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-134",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 134"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("<del>\n*foo*\n</del>\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("<del>\n*foo*\n</del>\n")])]),e._v(" "),n("p",[e._v("In this case, we get a raw HTML block that just includes the "),n("code",[e._v("<del>")]),e._v(" tag (because it ends with the following blank line). So the contents get interpreted as CommonMark:"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-135",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 135"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("<del>\n\n*foo*\n\n</del>\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("<del>\n<p><em>foo</em></p>\n</del>\n")])]),e._v(" "),n("p",[e._v("Finally, in this case, the "),n("code",[e._v("<del>")]),e._v(" tags are interpreted as "),n("a",{attrs:{href:"https://github.github.com/gfm/#raw-html",target:"_blank",rel:"noopener noreferrer"}},[e._v("raw HTML"),n("OutboundLink")],1),e._v(" "),n("em",[e._v("inside")]),e._v(" the CommonMark paragraph. (Because the tag is not on a line by itself, we get inline HTML rather than an "),n("a",{attrs:{href:"https://github.github.com/gfm/#html-block",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTML block"),n("OutboundLink")],1),e._v(".)"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-136",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 136"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("<del>*foo*</del>\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("<p><del><em>foo</em></del></p>\n")])]),e._v(" "),n("p",[e._v("HTML tags designed to contain literal content ("),n("code",[e._v("script")]),e._v(", "),n("code",[e._v("style")]),e._v(", "),n("code",[e._v("pre")]),e._v("), comments, processing instructions, and declarations are treated somewhat differently. Instead of ending at the first blank line, these blocks end at the first line containing a corresponding end tag. As a result, these blocks can contain blank lines:"),n("br"),e._v("\nA pre tag (type 1):"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-137",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 137"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v('<pre language="haskell"><code>\nimport Text.HTML.TagSoup\n\nmain :: IO ()\nmain = print $ parseTags tags\n</code></pre>\nokay\n')])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v('<pre language="haskell"><code>\nimport Text.HTML.TagSoup\n\nmain :: IO ()\nmain = print $ parseTags tags\n</code></pre>\n<p>okay</p>\n')])]),e._v(" "),n("p",[e._v("A script tag (type 1):"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-138",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 138"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v('<script type="text/javascript">\n// JavaScript example\n\ndocument.getElementById("demo").innerHTML = "Hello JavaScript!";\n<\/script>\nokay\n')])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v('<script type="text/javascript">\n// JavaScript example\n\ndocument.getElementById("demo").innerHTML = "Hello JavaScript!";\n<\/script>\n<p>okay</p>\n')])]),e._v(" "),n("p",[e._v("A style tag (type 1):"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-139",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 139"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v('<style\n  type="text/css">\nh1 {color:red;}\n\np {color:blue;}\n</style>\nokay\n')])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v('<style\n  type="text/css">\nh1 {color:red;}\n\np {color:blue;}\n</style>\n<p>okay</p>\n')])]),e._v(" "),n("p",[e._v("If there is no matching end tag, the block will end at the end of the document (or the enclosing "),n("a",{attrs:{href:"https://github.github.com/gfm/#block-quotes",target:"_blank",rel:"noopener noreferrer"}},[e._v("block quote"),n("OutboundLink")],1),e._v("or "),n("a",{attrs:{href:"https://github.github.com/gfm/#list-items",target:"_blank",rel:"noopener noreferrer"}},[e._v("list item"),n("OutboundLink")],1),e._v("):"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-140",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 140"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v('<style\n  type="text/css">\n\nfoo\n')])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v('<style\n  type="text/css">\n\nfoo\n')])]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.github.com/gfm/#example-141",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 141"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("> <div>\n> foo\n\nbar\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("<blockquote>\n<div>\nfoo\n</blockquote>\n<p>bar</p>\n")])]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.github.com/gfm/#example-142",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 142"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("- <div>\n- foo\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("<ul>\n<li>\n<div>\n</li>\n<li>foo</li>\n</ul>\n")])]),e._v(" "),n("p",[e._v("The end tag can occur on the same line as the start tag:"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-143",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 143"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("<style>p{color:red;}</style>\n*foo*\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("<style>p{color:red;}</style>\n<p><em>foo</em></p>\n")])]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.github.com/gfm/#example-144",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 144"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("\x3c!-- foo --\x3e*bar*\n*baz*\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("\x3c!-- foo --\x3e*bar*\n<p><em>baz</em></p>\n")])]),e._v(" "),n("p",[e._v("Note that anything on the last line after the end tag will be included in the "),n("a",{attrs:{href:"https://github.github.com/gfm/#html-block",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTML block"),n("OutboundLink")],1),e._v(":"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-145",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 145"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("<script>\nfoo\n<\/script>1. *bar*\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("<script>\nfoo\n<\/script>1. *bar*\n")])]),e._v(" "),n("p",[e._v("A comment (type 2):"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-146",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 146"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("\x3c!-- Foo\n\nbar\n   baz --\x3e\nokay\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("\x3c!-- Foo\n\nbar\n   baz --\x3e\n<p>okay</p>\n")])]),e._v(" "),n("p",[e._v("A processing instruction (type 3):"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-147",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 147"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("<?php\n\n  echo '>';\n\n?>\nokay\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("<?php\n\n  echo '>';\n\n?>\n<p>okay</p>\n")])]),e._v(" "),n("p",[e._v("A declaration (type 4):"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-148",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 148"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("<!DOCTYPE html>\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("<!DOCTYPE html>\n")])]),e._v(" "),n("p",[e._v("CDATA (type 5):"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-149",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 149"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("<![CDATA[\nfunction matchwo(a,b)\n{\n  if (a < b && a < 0) then {\n    return 1;\n\n  } else {\n\n    return 0;\n  }\n}\n]]>\nokay\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("<![CDATA[\nfunction matchwo(a,b)\n{\n  if (a < b && a < 0) then {\n    return 1;\n\n  } else {\n\n    return 0;\n  }\n}\n]]>\n<p>okay</p>\n")])]),e._v(" "),n("p",[e._v("The opening tag can be indented 1-3 spaces, but not 4:"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-150",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 150"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("  \x3c!-- foo --\x3e\n\n    \x3c!-- foo --\x3e\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("  \x3c!-- foo --\x3e\n<pre><code>&lt;!-- foo --&gt;\n</code></pre>\n")])]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.github.com/gfm/#example-151",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 151"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("  <div>\n\n    <div>\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("  <div>\n<pre><code>&lt;div&gt;\n</code></pre>\n")])]),e._v(" "),n("p",[e._v("An HTML block of types 1–6 can interrupt a paragraph, and need not be preceded by a blank line."),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-152",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 152"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("Foo\n<div>\nbar\n</div>\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("<p>Foo</p>\n<div>\nbar\n</div>\n")])]),e._v(" "),n("p",[e._v("However, a following blank line is needed, except at the end of a document, and except for blocks of types 1–5, "),n("a",{attrs:{href:"https://github.github.com/gfm/#html-block",target:"_blank",rel:"noopener noreferrer"}},[e._v("above"),n("OutboundLink")],1),e._v(":"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-153",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 153"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("<div>\nbar\n</div>\n*foo*\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("<div>\nbar\n</div>\n*foo*\n")])]),e._v(" "),n("p",[e._v("HTML blocks of type 7 cannot interrupt a paragraph:"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-154",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 154"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v('Foo\n<a href="bar">\nbaz\n')])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v('<p>Foo\n<a href="bar">\nbaz</p>\n')])]),e._v(" "),n("p",[e._v("This rule differs from John Gruber’s original Markdown syntax specification, which says:")]),e._v(" "),n("blockquote",[n("p",[e._v("The only restrictions are that block-level HTML elements — e.g. "),n("code",[e._v("<div>")]),e._v(", "),n("code",[e._v("<table>")]),e._v(", "),n("code",[e._v("<pre>")]),e._v(", "),n("code",[e._v("<p>")]),e._v(", etc. — must be separated from surrounding content by blank lines, and the start and end tags of the block should not be indented with tabs or spaces.")])]),e._v(" "),n("p",[e._v("In some ways Gruber’s rule is more restrictive than the one given here:")]),e._v(" "),n("ul",[n("li",[e._v("It requires that an HTML block be preceded by a blank line.")]),e._v(" "),n("li",[e._v("It does not allow the start tag to be indented.")]),e._v(" "),n("li",[e._v("It requires a matching end tag, which it also does not allow to be indented.")])]),e._v(" "),n("p",[e._v("Most Markdown implementations (including some of Gruber’s own) do not respect all of these restrictions."),n("br"),e._v("\nThere is one respect, however, in which Gruber’s rule is more liberal than the one given here, since it allows blank lines to occur inside an HTML block. There are two reasons for disallowing them here. First, it removes the need to parse balanced tags, which is expensive and can require backtracking from the end of the document if no matching end tag is found. Second, it provides a very simple and flexible way of including Markdown content inside HTML tags: simply separate the Markdown from the HTML using blank lines:"),n("br"),e._v("\nCompare:"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-155",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 155"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("<div>\n\n*Emphasized* text.\n\n</div>\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("<div>\n<p><em>Emphasized</em> text.</p>\n</div>\n")])]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.github.com/gfm/#example-156",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 156"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("<div>\n*Emphasized* text.\n</div>\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("<div>\n*Emphasized* text.\n</div>\n")])]),e._v(" "),n("p",[e._v("Some Markdown implementations have adopted a convention of interpreting content inside tags as text if the open tag has the attribute "),n("code",[e._v("markdown=1")]),e._v(". The rule given above seems a simpler and more elegant way of achieving the same expressive power, which is also much simpler to parse."),n("br"),e._v("\nThe main potential drawback is that one can no longer paste HTML blocks into Markdown documents with 100% reliability. However, "),n("em",[e._v("in most cases")]),e._v(" this will work fine, because the blank lines in HTML are usually followed by HTML block tags. For example:"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-157",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 157"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("<table>\n\n<tr>\n\n<td>\nHi\n</td>\n\n</tr>\n\n</table>\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("<table>\n<tr>\n<td>\nHi\n</td>\n</tr>\n</table>\n")])]),e._v(" "),n("p",[e._v("There are problems, however, if the inner tags are indented "),n("em",[e._v("and")]),e._v(" separated by spaces, as then they will be interpreted as an indented code block:"),n("br"),e._v(" "),n("a",{attrs:{href:"https://github.github.com/gfm/#example-158",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 158"),n("OutboundLink")],1)]),e._v(" "),n("pre",[n("code",[e._v("<table>\n\n  <tr>\n\n    <td>\n      Hi\n    </td>\n\n  </tr>\n\n</table>\n")])]),e._v(" "),n("p"),e._v(" "),n("pre",[n("code",[e._v("<table>\n  <tr>\n<pre><code>&lt;td&gt;\n  Hi\n&lt;/td&gt;\n</code></pre>\n  </tr>\n</table>\n")])]),e._v(" "),n("p",[e._v("Fortunately, blank lines are usually not necessary and can be deleted. The exception is inside "),n("code",[e._v("<pre>")]),e._v(" tags, but as described "),n("a",{attrs:{href:"https://github.github.com/gfm/#html-blocks",target:"_blank",rel:"noopener noreferrer"}},[e._v("above"),n("OutboundLink")],1),e._v(", raw HTML blocks starting with "),n("code",[e._v("<pre>")]),e._v(" "),n("em",[e._v("can")]),e._v(" contain blank lines.")])])},[],!1,null,null,null);t.default=o.exports}}]);