(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{365:function(e,t,r){"use strict";r.r(t);var n=r(46),i=Object(n.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h3",{attrs:{id:"task-list-items-extension"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#task-list-items-extension","aria-hidden":"true"}},[e._v("#")]),e._v(" Task list items (extension)")]),e._v(" "),r("p",[e._v("GFM enables the "),r("code",[e._v("tasklist")]),e._v(" extension, where an additional processing step is performed on "),r("a",{attrs:{href:"https://github.github.com/gfm/#list-items",target:"_blank",rel:"noopener noreferrer"}},[e._v("list items"),r("OutboundLink")],1),e._v("."),r("br"),e._v("\nA "),r("a",{attrs:{href:"https://github.github.com/gfm/#task-list-item",target:"_blank",rel:"noopener noreferrer"}},[e._v("task list item"),r("OutboundLink")],1),e._v(" is a "),r("a",{attrs:{href:"https://github.github.com/gfm/#list-items",target:"_blank",rel:"noopener noreferrer"}},[e._v("list item"),r("OutboundLink")],1),e._v(" where the first block in it is a paragraph which begins with a "),r("a",{attrs:{href:"https://github.github.com/gfm/#task-list-item-marker",target:"_blank",rel:"noopener noreferrer"}},[e._v("task list item marker"),r("OutboundLink")],1),e._v(" and at least one whitespace character before any other content."),r("br"),e._v("\nA "),r("a",{attrs:{href:"https://github.github.com/gfm/#task-list-item-marker",target:"_blank",rel:"noopener noreferrer"}},[e._v("task list item marker"),r("OutboundLink")],1),e._v(" consists of an optional number of spaces, a left bracket ("),r("code",[e._v("[")]),e._v("), either a whitespace character or the letter "),r("code",[e._v("x")]),e._v(" in either lowercase or uppercase, and then a right bracket ("),r("code",[e._v("]")]),e._v(")."),r("br"),e._v("\nWhen rendered, the "),r("a",{attrs:{href:"https://github.github.com/gfm/#task-list-item-marker",target:"_blank",rel:"noopener noreferrer"}},[e._v("task list item marker"),r("OutboundLink")],1),e._v(" is replaced with a semantic checkbox element; in an HTML output, this would be an "),r("code",[e._v('<input type="checkbox">')]),e._v(" element."),r("br"),e._v("\nIf the character between the brackets is a whitespace character, the checkbox is unchecked. Otherwise, the checkbox is checked."),r("br"),e._v("\nThis spec does not define how the checkbox elements are interacted with: in practice, implementors are free to render the checkboxes as disabled or inmutable elements, or they may dynamically handle dynamic interactions (i.e. checking, unchecking) in the final rendered document."),r("br"),e._v(" "),r("a",{attrs:{href:"https://github.github.com/gfm/#example-272",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 272"),r("OutboundLink")],1)]),e._v(" "),r("pre",[r("code",[e._v("- [ ] foo\n- [x] bar\n")])]),e._v(" "),r("p"),e._v(" "),r("pre",[r("code",[e._v('<ul>\n<li><input disabled="" type="checkbox"> foo</li>\n<li><input checked="" disabled="" type="checkbox"> bar</li>\n</ul>\n')])]),e._v(" "),r("p",[e._v("Task lists can be arbitrarily nested:"),r("br"),e._v(" "),r("a",{attrs:{href:"https://github.github.com/gfm/#example-273",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example 273"),r("OutboundLink")],1)]),e._v(" "),r("pre",[r("code",[e._v("- [x] foo\n  - [ ] bar\n  - [x] baz\n- [ ] bim\n")])]),e._v(" "),r("p"),e._v(" "),r("pre",[r("code",[e._v('<ul>\n<li><input checked="" disabled="" type="checkbox"> foo\n<ul>\n<li><input disabled="" type="checkbox"> bar</li>\n<li><input checked="" disabled="" type="checkbox"> baz</li>\n</ul>\n</li>\n<li><input disabled="" type="checkbox"> bim</li>\n</ul>\n')])])])},[],!1,null,null,null);t.default=i.exports}}]);